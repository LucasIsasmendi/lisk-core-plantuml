@startuml
class Transport < modules > {
  - shared: {}
  - __private: {}
  - self: this
  .. __private ..
  - broadcaster: new Broadcaster( broadcasts,
  force, peers, transaction, logger)
  .. library ..
  - logger
  - db
  - bus
  - schema
  - network
  - balancesSequence
  - logic.block
  - logic.transaction
  - logic.peers
  - config.peers.options.timeout
  .. modules ..
  - blocks
  - dapps
  - peers
  - multisignatures
  - transactions
  - system
  -- Methods --
  + Transport (cb, scope)
  + headers (headers)
  + consensus ()
  + poorConsensus ()
  + getPeers (params, cb)
  + getFromRandomPeer (config, options, cb)
  + getFromPeer (peer, options, cb)
  + sandboxApi (call, args, cb)
  + onBind (scope)
  + onBlockchainReady ()
  + onSignature (signature, broadcast)
  + onUnconfirmedTransaction (transaction, broadcast)
  + onNewBlock (block, broadcast)
  + onMessage (msg, broadcast)
  + cleanup (cb)
  + isLoaded ()
  .. __private ..
  - hashsum (obj)
  - banPeer (options, extraMessage)
  - removePeer (options, extraMessage)
  - receiveSignatures (query, cb)
  - receiveSignature (signature, cb)
  - receiveTransactions (query, peer,
  extraLogMessage, cb)
  - receiveTransaction (transaction,
  peer, extraLogMessage, cb)
  -- API --
  .. shared ..
  + message (msg, cb)
  + request (msg, cb)
  .. internal ..
  - blocksCommon (ids, peer, extraLogMessage, cb)
  - blocks (lastBlockId, cb)
  - postBlock (block, peer, extraLogMessage, cb)
  - list (req, cb)
  - height (req, cb)
  - ping (req, cb)
  - postSignatures (query, cb)
  - getSignatures (req, cb)
  - getTransactions (req, cb)
  - postTransactions (query, peer, extraLogMessage, cb)
  - postDappMessage (query, cb)
  - postDappRequest (query, cb)
  - handshake (ip, port, headers, validateHeaders, cb)


}
@enduml
